.container {
  padding: 20px;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;

  h2 {
    margin: 0;
  }

  button {
    padding: 10px 15px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;

    &:hover:not(:disabled) {
      background-color: #0056b3;
    }

    &:disabled {
      background-color: #ccc;
      cursor: not-allowed;
      opacity: 0.7;
    }
  }
}

// Wrapper for multiple controls in the header
.headerActions {
  display: flex;
  gap: 15px;
  align-items: center;
}

// Dropdown filter for program/semester
.filterDropdown {
  padding: 10px 15px;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 0.9em;
  font-family: Arial, sans-serif;
}

// Container for the search bar below the header
.searchContainer {
  margin-bottom: 20px;

  // Target the Searchbar component's wrapper
  // :global() is used to style a child component's class
  :global(.searchWrapper) {
    width: 100%;
    max-width: 600px;
  }
}

.table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;

  th, td {
    border: 1px solid #ddd;
    padding: 12px 15px;
    text-align: left;
    vertical-align: middle;
  }

  thead th {
    background-color: #f8f9fa;
    font-weight: bold;
  }

  tbody tr:hover {
    background-color: #e9ecef;
  }

  // --- This rule creates the fixed height for empty/loading rows ---
  td[colSpan] {
    height: 200px;
    text-align: center;
    vertical-align: middle;
    padding: 0;
  }
}

// This styles the cell holding the spinner
.spinnerCell {
  // Styles are now handled by td[colSpan]
}

// This styles the *inner* dashed box for the empty state
td > div[class*="emptyState"] {
  border: 2px dashed #e9ecef;
  border-radius: 8px;
  padding: 40px;
  display: inline-block; // Allows box to center
}

// --- Button Styles ---
.button {
  padding: 5px 10px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  color: white;
  font-size: 0.9em;
  transition: background-color 0.2s ease-in-out;
}

.editButton {
  background-color: #ffc107; // Yellow
  margin-right: 5px;
  &:hover {
    background-color: #e0a800;
  }
}

.deleteButton {
  background-color: #e74c3c; // Red
  &:hover {
    background-color: #c0392b;
  }
}

.assignButton {
  background-color: #17a2b8; // Teal
  margin-right: 5px;
  &:hover {
    background-color: #138496;
  }
}

.checkoutButton {
  background-color: #28a745; // Green
  margin-right: 5px;
  &:hover {
    background-color: #218838;
  }
  &:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }
}

.returnButton {
  background-color: #007bff; // Blue
  &:hover {
    background-color: #0056b3;
  }
}

.viewButton {
  background-color: #6c757d; // Gray
  &:hover {
    background-color: #5a6268;
  }
}

.statusSelect {
  padding: 5px;
  border-radius: 4px;
  border: 1px solid #ccc;
  background-color: #fff;
  
  &:disabled {
    background-color: #e9ecef;
    cursor: not-allowed;
    opacity: 0.7;
  }
}